#!/usr/bin/env bash

BCK_ROOT="$HOME/.dotfiles-backup"
if [ ! -d "$BCK_ROOT" ]; then
  mkdir "$BCK_ROOT"
  echo "Created backup directory: $BCK_ROOT"
fi

if [ ! -d "$HOME/.config" ]; then
  mkdir "$HOME/.config"
  echo "Created XDG compliant config directory: $HOME/.config"
fi

SRC_ROOT=$(pwd -P)

# ======================== #
#    Upload font assets    #
# ======================== #

FNT_SRC="$SRC_ROOT/assets/fonts"
FNT_DST="$HOME/Library/Fonts" # MacOS uses Library/Fonts for user-specific fonts

if [ ! -d "$FNT_DST" ]; then
  mkdir -p "$FNT_DST"
fi

yes | cp $FNT_SRC/*.ttf "$FNT_DST/"
echo "Copied all fonts: $FNT_SRC -> $FNT_DST"

# ===================================== #
#    Setup symlink for script assets    #
# ===================================== #

SCRIPT_SRC="$SRC_ROOT/assets/scripts"
SCRIPT_BCK="$BCK_ROOT/scripts"
SCRIPT_DST="$HOME/.scripts"

if [ -d "$SCRIPT_DST" ]; then
  if [ ! -L "$SCRIPT_DST" ]; then
    mv "$SCRIPT_DST" "$SCRIPT_BCK" -f
    echo "Moved directory to backup: $SCRIPT_DST -> $SCRIPT_BCK"
  fi
fi

if [ ! -L "$SCRIPT_DST" ]; then
  ln -s "$SCRIPT_SRC" "$SCRIPT_DST"
  echo "Created symlink: $SCRIPT_DST -> $SCRIPT_SRC"
fi

# ==================================== #
#    Setup symlink for kitty config    #
# ==================================== #

KITTY_SRC="$SRC_ROOT/kitty"
KITTY_BCK="$BCK_ROOT/kitty"
KITTY_DST="$HOME/.config/kitty"

if [ -d "$KITTY_DST" ]; then
  if [ ! -L "$KITTY_DST" ]; then
    mv "$KITTY_DST" "$KITTY_BCK"
    echo "Moved file to backup: $KITTY_DST -> $KITTY_BCK"
  fi
fi

if [ ! -L "$KITTY_DST" ]; then
  ln -s "$KITTY_SRC" "$KITTY_DST"
  echo "Created symlink: $KITTY_DST -> $KITTY_SRC"
fi

# =================================== #
#    Setup symlink for tmux config    #
# =================================== #

TMUX_SRC="$SRC_ROOT/tmux"
TMUX_BCK="$BCK_ROOT/tmux"
TMUX_DST="$HOME/.config/tmux"

if [ -d "$TMUX_DST" ]; then
  if [ ! -L "$TMUX_DST" ]; then
    mv "$TMUX_DST" "$TMUX_BCK" -f
    echo "Moved directory to backup: $TMUX_DST -> $TMUX_BCK"
  fi
fi

if [ ! -L "$TMUX_DST" ]; then
  ln -s "$TMUX_SRC" "$TMUX_DST"
  echo "Created symlink: $TMUX_DST -> $TMUX_SRC"
fi

# ============================================== #
#    Setup symlink for git config (+ includes)   #
# ============================================== #

GIT_SRC="$SRC_ROOT/git"
GIT_BCK="$BCK_ROOT/git"
GIT_DST="$HOME/.config/git"

if [ -d "$GIT_DST" ]; then
  if [ ! -L "$GIT_DST" ]; then
    mv "$GIT_DST" "$GIT_BCK" -f
    echo "Moved directory to backup: $GIT_DST -> $GIT_BCK"
  fi
fi

if [ ! -L "$GIT_DST" ]; then
  ln -s "$GIT_SRC" "$GIT_DST"
  echo "Created symlink: $GIT_DST -> $GIT_SRC"
fi

git config --global --replace-all include.path ~/.config/git/personal.gitconfig
git config --global --add include.path ~/.config/git/delta.gitconfig

# ================================== #
#    Setup symlink for zsh config    #
# ================================== #

ZSHRC_SRC="$SRC_ROOT/zsh/.zshrc"
ZSHRC_BCK="$BCK_ROOT/zsh/.zshrc"
ZSHRC_DST="$HOME/.zshrc"

if [ -f "$ZSHRC_DST" ]; then
  if [ ! -L "$ZSHRC_DST" ]; then
    mkdir -p "$BCK_ROOT/zsh"
    mv "$ZSHRC_DST" "$ZSHRC_BCK" -f
    echo "Moved file to backup: $ZSHRC_DST -> $ZSHRC_BCK"
  fi
fi

if [ ! -L "$ZSHRC_DST" ]; then
  ln -s "$ZSHRC_SRC" "$ZSHRC_DST"
  echo "Created symlink: $ZSHRC_DST -> $ZSHRC_SRC"
fi

# =========================================== #
#    Setup symlink for zsh config directory   #
# =========================================== #

ZSH_SRC="$SRC_ROOT/zsh"
ZSH_BCK="$BCK_ROOT/zsh"
ZSH_DST="$HOME/.config/zsh"

if [ -d "$ZSH_DST" ]; then
  if [ ! -L "$ZSH_DST" ]; then
    mv "$ZSH_DST" "$ZSH_BCK" -f
    echo "Moved directory to backup: $ZSH_DST -> $ZSH_BCK"
  fi
fi

if [ ! -L "$ZSH_DST" ]; then
  ln -s "$ZSH_SRC" "$ZSH_DST"
  echo "Created symlink: $ZSH_DST -> $ZSH_SRC"
fi
