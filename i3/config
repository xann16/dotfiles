# i3 config file (v4)
#  - see https://i3wm.org/docs/userguide.html for a complete reference!

# Use System key (a.k.a. "Windows" key) as a modifier for i3-specific shortcuts
set $mod Mod4

# Use MesloLGS Nerd Font as a base font
font pango:MesloLGS NF 11

# Start XDG autostart .desktop files using dex.
# See also https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Start a terminal (with Shift also start with default tmux session)
bindsym $mod+Shift+Return exec kitty --session $HOME/.config/kitty/sessions/tmux-ws.conf
bindsym $mod+Return exec kitty

# Kill focused window (i.e. 'Q'uit)
bindsym $mod+q kill

# Start dmenu program launcher (i.e. 'R'un) - extra color config to fit Moonlight theme
bindsym $mod+r exec --no-startup-id dmenu_run -nf '#BBBBBB' -nb '#222222' -sb '#403C64' -sf '#E4F3FA' -fn 'monospace-10'

# Change focus (incomplete Vim-style bindings, also 'N'ext/'P'revious)
bindsym $mod+h focus left
bindsym $mod+p focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+n focus right

# Change focus (arrow keys)
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move focused window (with Shift - incomplete Vim-style bindings, also 'N'ext/'P'revious)
bindsym $mod+Shift+h move left
bindsym $mod+Shift+p move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+n move right

# Move focused window (with Shift - arrow keys)
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Split in horizontal orientation (i.e. 'B'orizontal)
bindsym $mod+b split h

# Split in vertical orientation (i.e. 'V'ertical)
bindsym $mod+v split v

# Toggle fullscreen mode for the focused window (i.e. 'F'ullscreen)
bindsym $mod+f fullscreen toggle

# Change window layout ('W' - stacked, 'T'abbed, 'E' - toggle split)
bindsym $mod+w layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# Toggle tiling / floating window management
bindsym $mod+Shift+space floating toggle

# Change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Change workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# Move focused window to workspace (with Shift)
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Change workspace (relative - +/-)
bindsym $mod+equal workspace next
bindsym $mod+minus workspace prev

# Move focused window to workspace (with Shift, relative - +/-)
bindsym $mod+Shift+equal move container to workspace next
bindsym $mod+Shift+minus move container to workspace prev

# Reload i3 configuration file (i.e. 'C'onfig)
bindsym $mod+Shift+c reload

# Restart i3 inplace - preserves layout/session, can be used to upgrade i3 (i.e. 'R'estart)
bindsym $mod+Shift+r restart

# Exit i3 (prompts for confirmation and then logs out of X session)
bindsym $mod+Shift+q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Specification of a Resize mode (bindings only in that mode)
mode "resize" {
        # Use vim-like bindings to change size horizontally or vertically
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt
        bindsym n resize grow width 10 px or 10 ppt

        # Use arrow keys to change size horizontally or vertically
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # Use Enter, Escape, or $mod+s to exit resize mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+s mode "default"
}

# Enter resize mode (i.e. re'S'ize)
bindsym $mod+s mode "resize"

# Defines i3 status bar (with information display using bumblebee)
bar {
        # Specifies the same font (slightly smaller) to be used in status bar
	font pango:MesloLGS NF 10

        # Status bar is located on top
	position top

        # Not using system tray area
	tray_output none

        # Using bumblebee to provide system stats for the status bar
        #  - executable path is specific to instalation using PIP
        #  - color theme consistent with Moonlight theme
	status_command ~/.local/bin/bumblebee-status \
                -m disk memory cpu pasink battery date time \
                -p time.format="%H:%M" date.format="%Y-%m-%d" \
                -t moonlight-powerline

        # Color settings that follow Moonlight theme
        colors {
                background #000000
                statusline #FFFFFF
                separator  #666666

                focused_workspace  #403C64 #403C64 #E4F3FA
                active_workspace   #222222 #222222 #E4F3FA
                inactive_workspace #212337 #212337 #BBBBBB
                urgent_workspace   #900000 #900000 #FFFFFF
                binding_mode       #C07020 #C07020 #FFFFFF
        }
}

# Window colors that follow Moonlight theme
# class                 border  bground text    indicator child_border
client.focused          #403C64 #403C64 #E4F3FA #7871BC   #403C64
client.focused_inactive #222222 #222222 #BBBBBB #484E50   #222222
client.unfocused        #212337 #212337 #E4F3FA #292D2E   #212337
client.urgent           #900000 #900000 #FFFFFF #900000   #900000
client.placeholder      #333333 #333333 #CCCCCC #000000   #333333
client.background       #FFFFFF

# Hides window side borders
#  - when upgrading to 'v4.22+' may be replaced by "smart_borders on"
hide_edge_borders both

# Completely disable borders for terminal windows
for_window [class="kitty"] border pixel 0

# Manually trigger screen lock (i.e. 'L'ock)
bindsym $mod+Shift+l exec i3lock -c 180018

# Enable automatic screen lock trigger (after 10 minutes)
exec "xautolock -detectsleep -time 10 -locker \"i3lock -c 180018\""

# Setup wallpaper image using feh
exec_always feh --bg-fill $HOME/Pictures/wallpaper.jpg

# Run picom compositor to disable fades and setup window transparency
exec_always --no-startup-id picom -b --config \"$HOME/.config/picom/picom.conf\"
